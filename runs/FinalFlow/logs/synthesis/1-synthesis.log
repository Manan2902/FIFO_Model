
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.38 (git sha1 543faed9c8c, clang++ 17.0.6 -fPIC -Os)

[TCL: yosys -import] Command name collision: found pre-existing command `cd' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `eval' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `exec' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `read' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `trace' -> skip.

1. Executing Liberty frontend: /home/manan/.volare/sky130A/libs.ref/sky130_fd_sc_hd/lib/sky130_fd_sc_hd__tt_025C_1v80.lib
Imported 428 cell types from liberty file.

2. Executing Verilog-2005 frontend: /openlane/designs/FIFO_Model/src/FIFO_Model.v
Parsing SystemVerilog input from `/openlane/designs/FIFO_Model/src/FIFO_Model.v' to AST representation.
Storing AST representation for module `$abstract\FIFO_Model'.
Storing AST representation for module `$abstract\FIFO_MEM_BLK'.
Successfully finished Verilog frontend.

3. Executing HIERARCHY pass (managing design hierarchy).

4. Executing AST frontend in derive mode using pre-parsed AST for module `\FIFO_Model'.
Generating RTLIL representation for module `\FIFO_Model'.

4.1. Analyzing design hierarchy..
Top module:  \FIFO_Model

4.2. Executing AST frontend in derive mode using pre-parsed AST for module `\FIFO_MEM_BLK'.
Generating RTLIL representation for module `\FIFO_MEM_BLK'.

4.3. Analyzing design hierarchy..
Top module:  \FIFO_Model
Used module:     \FIFO_MEM_BLK

4.4. Analyzing design hierarchy..
Top module:  \FIFO_Model
Used module:     \FIFO_MEM_BLK
Removing unused module `$abstract\FIFO_MEM_BLK'.
Removing unused module `$abstract\FIFO_Model'.
Removed 2 unused modules.

5. Generating Graphviz representation of design.
Writing dot description to `/openlane/designs/FIFO_Model/runs/FinalFlow/tmp/synthesis/hierarchy.dot'.
Dumping module FIFO_Model to page 1.
Renaming module FIFO_Model to FIFO_Model.

6. Executing TRIBUF pass.

7. Executing HIERARCHY pass (managing design hierarchy).

7.1. Analyzing design hierarchy..
Top module:  \FIFO_Model
Used module:     \FIFO_MEM_BLK

7.2. Analyzing design hierarchy..
Top module:  \FIFO_Model
Used module:     \FIFO_MEM_BLK
Removed 0 unused modules.

8. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

9. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 3 switch rules as full_case in process $proc$/openlane/designs/FIFO_Model/src/FIFO_Model.v:192$74 in module FIFO_Model.
Marked 3 switch rules as full_case in process $proc$/openlane/designs/FIFO_Model/src/FIFO_Model.v:168$59 in module FIFO_Model.
Marked 3 switch rules as full_case in process $proc$/openlane/designs/FIFO_Model/src/FIFO_Model.v:143$42 in module FIFO_Model.
Marked 3 switch rules as full_case in process $proc$/openlane/designs/FIFO_Model/src/FIFO_Model.v:118$27 in module FIFO_Model.
Marked 3 switch rules as full_case in process $proc$/openlane/designs/FIFO_Model/src/FIFO_Model.v:94$16 in module FIFO_Model.
Marked 3 switch rules as full_case in process $proc$/openlane/designs/FIFO_Model/src/FIFO_Model.v:57$1 in module FIFO_Model.
Marked 1 switch rules as full_case in process $proc$/openlane/designs/FIFO_Model/src/FIFO_Model.v:237$87 in module FIFO_MEM_BLK.
Removed a total of 0 dead cases.

10. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 3 assignments to connections.

11. Executing PROC_INIT pass (extract init attributes).

12. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \RstN in `\FIFO_Model.$proc$/openlane/designs/FIFO_Model/src/FIFO_Model.v:192$74'.
Found async reset \RstN in `\FIFO_Model.$proc$/openlane/designs/FIFO_Model/src/FIFO_Model.v:168$59'.
Found async reset \RstN in `\FIFO_Model.$proc$/openlane/designs/FIFO_Model/src/FIFO_Model.v:143$42'.
Found async reset \RstN in `\FIFO_Model.$proc$/openlane/designs/FIFO_Model/src/FIFO_Model.v:118$27'.
Found async reset \RstN in `\FIFO_Model.$proc$/openlane/designs/FIFO_Model/src/FIFO_Model.v:94$16'.
Found async reset \RstN in `\FIFO_Model.$proc$/openlane/designs/FIFO_Model/src/FIFO_Model.v:57$1'.

13. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.
<suppressed ~21 debug messages>

14. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\FIFO_Model.$proc$/openlane/designs/FIFO_Model/src/FIFO_Model.v:192$74'.
     1/1: $0\F_FullN[0:0]
Creating decoders for process `\FIFO_Model.$proc$/openlane/designs/FIFO_Model/src/FIFO_Model.v:168$59'.
     1/1: $0\F_LastN[0:0]
Creating decoders for process `\FIFO_Model.$proc$/openlane/designs/FIFO_Model/src/FIFO_Model.v:143$42'.
     1/1: $0\F_SLastN[0:0]
Creating decoders for process `\FIFO_Model.$proc$/openlane/designs/FIFO_Model/src/FIFO_Model.v:118$27'.
     1/1: $0\F_FirstN[0:0]
Creating decoders for process `\FIFO_Model.$proc$/openlane/designs/FIFO_Model/src/FIFO_Model.v:94$16'.
     1/1: $0\F_EmptyN[0:0]
Creating decoders for process `\FIFO_Model.$proc$/openlane/designs/FIFO_Model/src/FIFO_Model.v:57$1'.
     1/3: $0\wr_ptr[1:0]
     2/3: $0\rd_ptr[1:0]
     3/3: $0\fcounter[2:0]
Creating decoders for process `\FIFO_MEM_BLK.$proc$/openlane/designs/FIFO_Model/src/FIFO_Model.v:237$87'.
     1/3: $1$memwr$\FIFO$/openlane/designs/FIFO_Model/src/FIFO_Model.v:239$85_EN[31:0]$94
     2/3: $1$memwr$\FIFO$/openlane/designs/FIFO_Model/src/FIFO_Model.v:239$85_DATA[31:0]$93
     3/3: $1$memwr$\FIFO$/openlane/designs/FIFO_Model/src/FIFO_Model.v:239$85_ADDR[1:0]$92

15. Executing PROC_DLATCH pass (convert process syncs to latches).

16. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\FIFO_Model.\F_FullN' using process `\FIFO_Model.$proc$/openlane/designs/FIFO_Model/src/FIFO_Model.v:192$74'.
  created $adff cell `$procdff$161' with positive edge clock and negative level reset.
Creating register for signal `\FIFO_Model.\F_LastN' using process `\FIFO_Model.$proc$/openlane/designs/FIFO_Model/src/FIFO_Model.v:168$59'.
  created $adff cell `$procdff$162' with positive edge clock and negative level reset.
Creating register for signal `\FIFO_Model.\F_SLastN' using process `\FIFO_Model.$proc$/openlane/designs/FIFO_Model/src/FIFO_Model.v:143$42'.
  created $adff cell `$procdff$163' with positive edge clock and negative level reset.
Creating register for signal `\FIFO_Model.\F_FirstN' using process `\FIFO_Model.$proc$/openlane/designs/FIFO_Model/src/FIFO_Model.v:118$27'.
  created $adff cell `$procdff$164' with positive edge clock and negative level reset.
Creating register for signal `\FIFO_Model.\F_EmptyN' using process `\FIFO_Model.$proc$/openlane/designs/FIFO_Model/src/FIFO_Model.v:94$16'.
  created $adff cell `$procdff$165' with positive edge clock and negative level reset.
Creating register for signal `\FIFO_Model.\fcounter' using process `\FIFO_Model.$proc$/openlane/designs/FIFO_Model/src/FIFO_Model.v:57$1'.
  created $adff cell `$procdff$166' with positive edge clock and negative level reset.
Creating register for signal `\FIFO_Model.\rd_ptr' using process `\FIFO_Model.$proc$/openlane/designs/FIFO_Model/src/FIFO_Model.v:57$1'.
  created $adff cell `$procdff$167' with positive edge clock and negative level reset.
Creating register for signal `\FIFO_Model.\wr_ptr' using process `\FIFO_Model.$proc$/openlane/designs/FIFO_Model/src/FIFO_Model.v:57$1'.
  created $adff cell `$procdff$168' with positive edge clock and negative level reset.
Creating register for signal `\FIFO_MEM_BLK.$memwr$\FIFO$/openlane/designs/FIFO_Model/src/FIFO_Model.v:239$85_ADDR' using process `\FIFO_MEM_BLK.$proc$/openlane/designs/FIFO_Model/src/FIFO_Model.v:237$87'.
  created $dff cell `$procdff$169' with positive edge clock.
Creating register for signal `\FIFO_MEM_BLK.$memwr$\FIFO$/openlane/designs/FIFO_Model/src/FIFO_Model.v:239$85_DATA' using process `\FIFO_MEM_BLK.$proc$/openlane/designs/FIFO_Model/src/FIFO_Model.v:237$87'.
  created $dff cell `$procdff$170' with positive edge clock.
Creating register for signal `\FIFO_MEM_BLK.$memwr$\FIFO$/openlane/designs/FIFO_Model/src/FIFO_Model.v:239$85_EN' using process `\FIFO_MEM_BLK.$proc$/openlane/designs/FIFO_Model/src/FIFO_Model.v:237$87'.
  created $dff cell `$procdff$171' with positive edge clock.

17. Executing PROC_MEMWR pass (convert process memory writes to cells).

18. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 3 empty switches in `\FIFO_Model.$proc$/openlane/designs/FIFO_Model/src/FIFO_Model.v:192$74'.
Removing empty process `FIFO_Model.$proc$/openlane/designs/FIFO_Model/src/FIFO_Model.v:192$74'.
Found and cleaned up 3 empty switches in `\FIFO_Model.$proc$/openlane/designs/FIFO_Model/src/FIFO_Model.v:168$59'.
Removing empty process `FIFO_Model.$proc$/openlane/designs/FIFO_Model/src/FIFO_Model.v:168$59'.
Found and cleaned up 3 empty switches in `\FIFO_Model.$proc$/openlane/designs/FIFO_Model/src/FIFO_Model.v:143$42'.
Removing empty process `FIFO_Model.$proc$/openlane/designs/FIFO_Model/src/FIFO_Model.v:143$42'.
Found and cleaned up 3 empty switches in `\FIFO_Model.$proc$/openlane/designs/FIFO_Model/src/FIFO_Model.v:118$27'.
Removing empty process `FIFO_Model.$proc$/openlane/designs/FIFO_Model/src/FIFO_Model.v:118$27'.
Found and cleaned up 3 empty switches in `\FIFO_Model.$proc$/openlane/designs/FIFO_Model/src/FIFO_Model.v:94$16'.
Removing empty process `FIFO_Model.$proc$/openlane/designs/FIFO_Model/src/FIFO_Model.v:94$16'.
Found and cleaned up 5 empty switches in `\FIFO_Model.$proc$/openlane/designs/FIFO_Model/src/FIFO_Model.v:57$1'.
Removing empty process `FIFO_Model.$proc$/openlane/designs/FIFO_Model/src/FIFO_Model.v:57$1'.
Found and cleaned up 1 empty switch in `\FIFO_MEM_BLK.$proc$/openlane/designs/FIFO_Model/src/FIFO_Model.v:237$87'.
Removing empty process `FIFO_MEM_BLK.$proc$/openlane/designs/FIFO_Model/src/FIFO_Model.v:237$87'.
Cleaned up 21 empty switches.

19. Executing CHECK pass (checking for obvious problems).
Checking module FIFO_Model...
Checking module FIFO_MEM_BLK...
Found and reported 0 problems.

20. Executing OPT_EXPR pass (perform const folding).
Optimizing module FIFO_Model.
<suppressed ~36 debug messages>
Optimizing module FIFO_MEM_BLK.
<suppressed ~4 debug messages>

21. Executing FLATTEN pass (flatten design).
Deleting now unused module FIFO_MEM_BLK.
<suppressed ~1 debug messages>

22. Executing OPT_EXPR pass (perform const folding).
Optimizing module FIFO_Model.

23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \FIFO_Model..
Removed 17 unused cells and 67 unused wires.
<suppressed ~18 debug messages>

24. Executing OPT pass (performing simple optimizations).

24.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module FIFO_Model.

24.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\FIFO_Model'.
<suppressed ~54 debug messages>
Removed a total of 18 cells.

24.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \FIFO_Model..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~11 debug messages>

24.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \FIFO_Model.
    Consolidated identical input bits for $mux cell $flatten\memblk.$procmux$153:
      Old ports: A=32'11111111111111111111111111111111, B=0, Y=$flatten\memblk.$0$memwr$\FIFO$/openlane/designs/FIFO_Model/src/FIFO_Model.v:239$85_EN[31:0]$90
      New ports: A=1'1, B=1'0, Y=$flatten\memblk.$0$memwr$\FIFO$/openlane/designs/FIFO_Model/src/FIFO_Model.v:239$85_EN[31:0]$90 [0]
      New connections: $flatten\memblk.$0$memwr$\FIFO$/openlane/designs/FIFO_Model/src/FIFO_Model.v:239$85_EN[31:0]$90 [31:1] = { $flatten\memblk.$0$memwr$\FIFO$/openlane/designs/FIFO_Model/src/FIFO_Model.v:239$85_EN[31:0]$90 [0] $flatten\memblk.$0$memwr$\FIFO$/openlane/designs/FIFO_Model/src/FIFO_Model.v:239$85_EN[31:0]$90 [0] $flatten\memblk.$0$memwr$\FIFO$/openlane/designs/FIFO_Model/src/FIFO_Model.v:239$85_EN[31:0]$90 [0] $flatten\memblk.$0$memwr$\FIFO$/openlane/designs/FIFO_Model/src/FIFO_Model.v:239$85_EN[31:0]$90 [0] $flatten\memblk.$0$memwr$\FIFO$/openlane/designs/FIFO_Model/src/FIFO_Model.v:239$85_EN[31:0]$90 [0] $flatten\memblk.$0$memwr$\FIFO$/openlane/designs/FIFO_Model/src/FIFO_Model.v:239$85_EN[31:0]$90 [0] $flatten\memblk.$0$memwr$\FIFO$/openlane/designs/FIFO_Model/src/FIFO_Model.v:239$85_EN[31:0]$90 [0] $flatten\memblk.$0$memwr$\FIFO$/openlane/designs/FIFO_Model/src/FIFO_Model.v:239$85_EN[31:0]$90 [0] $flatten\memblk.$0$memwr$\FIFO$/openlane/designs/FIFO_Model/src/FIFO_Model.v:239$85_EN[31:0]$90 [0] $flatten\memblk.$0$memwr$\FIFO$/openlane/designs/FIFO_Model/src/FIFO_Model.v:239$85_EN[31:0]$90 [0] $flatten\memblk.$0$memwr$\FIFO$/openlane/designs/FIFO_Model/src/FIFO_Model.v:239$85_EN[31:0]$90 [0] $flatten\memblk.$0$memwr$\FIFO$/openlane/designs/FIFO_Model/src/FIFO_Model.v:239$85_EN[31:0]$90 [0] $flatten\memblk.$0$memwr$\FIFO$/openlane/designs/FIFO_Model/src/FIFO_Model.v:239$85_EN[31:0]$90 [0] $flatten\memblk.$0$memwr$\FIFO$/openlane/designs/FIFO_Model/src/FIFO_Model.v:239$85_EN[31:0]$90 [0] $flatten\memblk.$0$memwr$\FIFO$/openlane/designs/FIFO_Model/src/FIFO_Model.v:239$85_EN[31:0]$90 [0] $flatten\memblk.$0$memwr$\FIFO$/openlane/designs/FIFO_Model/src/FIFO_Model.v:239$85_EN[31:0]$90 [0] $flatten\memblk.$0$memwr$\FIFO$/openlane/designs/FIFO_Model/src/FIFO_Model.v:239$85_EN[31:0]$90 [0] $flatten\memblk.$0$memwr$\FIFO$/openlane/designs/FIFO_Model/src/FIFO_Model.v:239$85_EN[31:0]$90 [0] $flatten\memblk.$0$memwr$\FIFO$/openlane/designs/FIFO_Model/src/FIFO_Model.v:239$85_EN[31:0]$90 [0] $flatten\memblk.$0$memwr$\FIFO$/openlane/designs/FIFO_Model/src/FIFO_Model.v:239$85_EN[31:0]$90 [0] $flatten\memblk.$0$memwr$\FIFO$/openlane/designs/FIFO_Model/src/FIFO_Model.v:239$85_EN[31:0]$90 [0] $flatten\memblk.$0$memwr$\FIFO$/openlane/designs/FIFO_Model/src/FIFO_Model.v:239$85_EN[31:0]$90 [0] $flatten\memblk.$0$memwr$\FIFO$/openlane/designs/FIFO_Model/src/FIFO_Model.v:239$85_EN[31:0]$90 [0] $flatten\memblk.$0$memwr$\FIFO$/openlane/designs/FIFO_Model/src/FIFO_Model.v:239$85_EN[31:0]$90 [0] $flatten\memblk.$0$memwr$\FIFO$/openlane/designs/FIFO_Model/src/FIFO_Model.v:239$85_EN[31:0]$90 [0] $flatten\memblk.$0$memwr$\FIFO$/openlane/designs/FIFO_Model/src/FIFO_Model.v:239$85_EN[31:0]$90 [0] $flatten\memblk.$0$memwr$\FIFO$/openlane/designs/FIFO_Model/src/FIFO_Model.v:239$85_EN[31:0]$90 [0] $flatten\memblk.$0$memwr$\FIFO$/openlane/designs/FIFO_Model/src/FIFO_Model.v:239$85_EN[31:0]$90 [0] $flatten\memblk.$0$memwr$\FIFO$/openlane/designs/FIFO_Model/src/FIFO_Model.v:239$85_EN[31:0]$90 [0] $flatten\memblk.$0$memwr$\FIFO$/openlane/designs/FIFO_Model/src/FIFO_Model.v:239$85_EN[31:0]$90 [0] $flatten\memblk.$0$memwr$\FIFO$/openlane/designs/FIFO_Model/src/FIFO_Model.v:239$85_EN[31:0]$90 [0] }
  Optimizing cells in module \FIFO_Model.
Performed a total of 1 changes.

24.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\FIFO_Model'.
Removed a total of 0 cells.

24.6. Executing OPT_DFF pass (perform DFF optimizations).

24.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \FIFO_Model..
Removed 0 unused cells and 18 unused wires.
<suppressed ~1 debug messages>

24.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module FIFO_Model.

24.9. Rerunning OPT passes. (Maybe there is more to do..)

24.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \FIFO_Model..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~11 debug messages>

24.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \FIFO_Model.
Performed a total of 0 changes.

24.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\FIFO_Model'.
Removed a total of 0 cells.

24.13. Executing OPT_DFF pass (perform DFF optimizations).

24.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \FIFO_Model..

24.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module FIFO_Model.

24.16. Finished OPT passes. (There is nothing left to do.)

25. Executing FSM pass (extract and optimize FSM).

25.1. Executing FSM_DETECT pass (finding FSMs in design).

25.2. Executing FSM_EXTRACT pass (extracting FSM from design).

25.3. Executing FSM_OPT pass (simple optimizations of FSMs).

25.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \FIFO_Model..

25.5. Executing FSM_OPT pass (simple optimizations of FSMs).

25.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

25.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

25.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

26. Executing OPT pass (performing simple optimizations).

26.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module FIFO_Model.

26.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\FIFO_Model'.
Removed a total of 0 cells.

26.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \FIFO_Model..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~11 debug messages>

26.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \FIFO_Model.
Performed a total of 0 changes.

26.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\FIFO_Model'.
Removed a total of 0 cells.

26.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $procdff$168 ($adff) from module FIFO_Model (D = $0\wr_ptr[1:0], Q = \wr_ptr).
Adding EN signal on $procdff$167 ($adff) from module FIFO_Model (D = $0\rd_ptr[1:0], Q = \rd_ptr).
Adding EN signal on $procdff$166 ($adff) from module FIFO_Model (D = $0\fcounter[2:0], Q = \fcounter).
Adding EN signal on $procdff$165 ($adff) from module FIFO_Model (D = $procmux$130_Y, Q = \F_EmptyN).
Adding EN signal on $procdff$164 ($adff) from module FIFO_Model (D = $0\F_FirstN[0:0], Q = \F_FirstN).
Adding EN signal on $procdff$163 ($adff) from module FIFO_Model (D = $0\F_SLastN[0:0], Q = \F_SLastN).
Adding EN signal on $procdff$162 ($adff) from module FIFO_Model (D = $0\F_LastN[0:0], Q = \F_LastN).
Adding EN signal on $procdff$161 ($adff) from module FIFO_Model (D = $0\F_FullN[0:0], Q = \F_FullN).

26.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \FIFO_Model..
Removed 1 unused cells and 1 unused wires.
<suppressed ~2 debug messages>

26.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module FIFO_Model.

26.9. Rerunning OPT passes. (Maybe there is more to do..)

26.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \FIFO_Model..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~11 debug messages>

26.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \FIFO_Model.
Performed a total of 0 changes.

26.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\FIFO_Model'.
Removed a total of 0 cells.

26.13. Executing OPT_DFF pass (perform DFF optimizations).

26.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \FIFO_Model..

26.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module FIFO_Model.

26.16. Finished OPT passes. (There is nothing left to do.)

27. Executing WREDUCE pass (reducing word size of cells).
Removed top 31 bits (of 32) from port B of cell FIFO_Model.$add$/openlane/designs/FIFO_Model/src/FIFO_Model.v:71$5 ($add).
Removed top 30 bits (of 32) from port Y of cell FIFO_Model.$add$/openlane/designs/FIFO_Model/src/FIFO_Model.v:71$5 ($add).
Removed top 31 bits (of 32) from port B of cell FIFO_Model.$add$/openlane/designs/FIFO_Model/src/FIFO_Model.v:73$7 ($add).
Removed top 30 bits (of 32) from port Y of cell FIFO_Model.$add$/openlane/designs/FIFO_Model/src/FIFO_Model.v:73$7 ($add).
Removed top 2 bits (of 3) from port B of cell FIFO_Model.$auto$opt_dff.cc:195:make_patterns_logic$194 ($ne).
Removed top 31 bits (of 32) from port B of cell FIFO_Model.$add$/openlane/designs/FIFO_Model/src/FIFO_Model.v:75$11 ($add).
Removed top 29 bits (of 32) from port Y of cell FIFO_Model.$add$/openlane/designs/FIFO_Model/src/FIFO_Model.v:75$11 ($add).
Removed top 31 bits (of 32) from port B of cell FIFO_Model.$sub$/openlane/designs/FIFO_Model/src/FIFO_Model.v:77$15 ($sub).
Removed top 29 bits (of 32) from port Y of cell FIFO_Model.$sub$/openlane/designs/FIFO_Model/src/FIFO_Model.v:77$15 ($sub).
Removed top 2 bits (of 3) from port B of cell FIFO_Model.$auto$opt_dff.cc:195:make_patterns_logic$188 ($ne).
Removed top 1 bits (of 3) from port B of cell FIFO_Model.$eq$/openlane/designs/FIFO_Model/src/FIFO_Model.v:125$33 ($eq).
Removed top 2 bits (of 3) from port B of cell FIFO_Model.$eq$/openlane/designs/FIFO_Model/src/FIFO_Model.v:149$50 ($eq).
Removed top 2 bits (of 3) from port B of cell FIFO_Model.$auto$opt_dff.cc:195:make_patterns_logic$181 ($ne).
Removed top 2 bits (of 3) from port B of cell FIFO_Model.$auto$opt_dff.cc:195:make_patterns_logic$185 ($ne).
Removed top 2 bits (of 3) from port B of cell FIFO_Model.$auto$opt_dff.cc:195:make_patterns_logic$191 ($ne).
Removed top 30 bits (of 32) from wire FIFO_Model.$add$/openlane/designs/FIFO_Model/src/FIFO_Model.v:71$5_Y.
Removed top 29 bits (of 32) from wire FIFO_Model.$add$/openlane/designs/FIFO_Model/src/FIFO_Model.v:75$11_Y.

28. Executing PEEPOPT pass (run peephole optimizers).

29. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \FIFO_Model..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

30. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module FIFO_Model:
  creating $macc model for $add$/openlane/designs/FIFO_Model/src/FIFO_Model.v:71$5 ($add).
  creating $macc model for $add$/openlane/designs/FIFO_Model/src/FIFO_Model.v:73$7 ($add).
  creating $macc model for $add$/openlane/designs/FIFO_Model/src/FIFO_Model.v:75$11 ($add).
  creating $macc model for $sub$/openlane/designs/FIFO_Model/src/FIFO_Model.v:77$15 ($sub).
  creating $alu model for $macc $sub$/openlane/designs/FIFO_Model/src/FIFO_Model.v:77$15.
  creating $alu model for $macc $add$/openlane/designs/FIFO_Model/src/FIFO_Model.v:75$11.
  creating $alu model for $macc $add$/openlane/designs/FIFO_Model/src/FIFO_Model.v:73$7.
  creating $alu model for $macc $add$/openlane/designs/FIFO_Model/src/FIFO_Model.v:71$5.
  creating $alu cell for $add$/openlane/designs/FIFO_Model/src/FIFO_Model.v:71$5: $auto$alumacc.cc:485:replace_alu$197
  creating $alu cell for $add$/openlane/designs/FIFO_Model/src/FIFO_Model.v:73$7: $auto$alumacc.cc:485:replace_alu$200
  creating $alu cell for $add$/openlane/designs/FIFO_Model/src/FIFO_Model.v:75$11: $auto$alumacc.cc:485:replace_alu$203
  creating $alu cell for $sub$/openlane/designs/FIFO_Model/src/FIFO_Model.v:77$15: $auto$alumacc.cc:485:replace_alu$206
  created 4 $alu and 0 $macc cells.

31. Executing SHARE pass (SAT-based resource sharing).

32. Executing OPT pass (performing simple optimizations).

32.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module FIFO_Model.

32.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\FIFO_Model'.
Removed a total of 0 cells.

32.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \FIFO_Model..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~11 debug messages>

32.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \FIFO_Model.
Performed a total of 0 changes.

32.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\FIFO_Model'.
Removed a total of 0 cells.

32.6. Executing OPT_DFF pass (perform DFF optimizations).

32.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \FIFO_Model..

32.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module FIFO_Model.

32.9. Finished OPT passes. (There is nothing left to do.)

33. Executing MEMORY pass.

33.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

33.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

33.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).
  Analyzing FIFO_Model.memblk.FIFO write port 0.

33.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

33.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).
Checking read port `\memblk.FIFO'[0] in module `\FIFO_Model': no output FF found.
Checking read port address `\memblk.FIFO'[0] in module `\FIFO_Model': address FF has async set and/or reset, not supported.

33.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \FIFO_Model..

33.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

33.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

33.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \FIFO_Model..

33.10. Executing MEMORY_COLLECT pass (generating $mem cells).

34. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \FIFO_Model..

35. Executing OPT pass (performing simple optimizations).

35.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module FIFO_Model.
<suppressed ~11 debug messages>

35.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\FIFO_Model'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

35.3. Executing OPT_DFF pass (perform DFF optimizations).

35.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \FIFO_Model..
Removed 0 unused cells and 11 unused wires.
<suppressed ~1 debug messages>

35.5. Finished fast OPT passes.

36. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).
Mapping memory \memblk.FIFO in module \FIFO_Model:
  created 4 $dff cells and 0 static cells of width 32.
  read interface: 0 $dff and 3 $mux cells.
  write interface: 4 write mux blocks.

37. Executing OPT pass (performing simple optimizations).

37.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module FIFO_Model.
<suppressed ~8 debug messages>

37.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\FIFO_Model'.
Removed a total of 0 cells.

37.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \FIFO_Model..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~12 debug messages>

37.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \FIFO_Model.
Performed a total of 0 changes.

37.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\FIFO_Model'.
Removed a total of 0 cells.

37.6. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $mux $procmux$147 in front of them:
        $auto$alumacc.cc:485:replace_alu$203
        $auto$alumacc.cc:485:replace_alu$206

37.7. Executing OPT_DFF pass (perform DFF optimizations).

37.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \FIFO_Model..
Removed 0 unused cells and 16 unused wires.
<suppressed ~1 debug messages>

37.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module FIFO_Model.
<suppressed ~2 debug messages>

37.10. Rerunning OPT passes. (Maybe there is more to do..)

37.11. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \FIFO_Model..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~13 debug messages>

37.12. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \FIFO_Model.
    Consolidated identical input bits for $mux cell $auto$opt_share.cc:244:merge_operators$263:
      Old ports: A=3'111, B=3'001, Y=$auto$rtlil.cc:2573:Mux$264
      New ports: A=1'1, B=1'0, Y=$auto$rtlil.cc:2573:Mux$264 [1]
      New connections: { $auto$rtlil.cc:2573:Mux$264 [2] $auto$rtlil.cc:2573:Mux$264 [0] } = { $auto$rtlil.cc:2573:Mux$264 [1] 1'1 }
  Optimizing cells in module \FIFO_Model.
Performed a total of 1 changes.

37.13. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\FIFO_Model'.
Removed a total of 0 cells.

37.14. Executing OPT_SHARE pass.

37.15. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $memory\memblk.FIFO[3]$217 ($dff) from module FIFO_Model (D = \Data_In, Q = \memblk.FIFO[3]).
Adding EN signal on $memory\memblk.FIFO[2]$215 ($dff) from module FIFO_Model (D = \Data_In, Q = \memblk.FIFO[2]).
Adding EN signal on $memory\memblk.FIFO[1]$213 ($dff) from module FIFO_Model (D = \Data_In, Q = \memblk.FIFO[1]).
Adding EN signal on $memory\memblk.FIFO[0]$211 ($dff) from module FIFO_Model (D = \Data_In, Q = \memblk.FIFO[0]).

37.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \FIFO_Model..
Removed 4 unused cells and 6 unused wires.
<suppressed ~5 debug messages>

37.17. Executing OPT_EXPR pass (perform const folding).
Optimizing module FIFO_Model.
<suppressed ~1 debug messages>

37.18. Rerunning OPT passes. (Maybe there is more to do..)

37.19. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \FIFO_Model..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~8 debug messages>

37.20. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \FIFO_Model.
Performed a total of 0 changes.

37.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\FIFO_Model'.
Removed a total of 0 cells.

37.22. Executing OPT_SHARE pass.

37.23. Executing OPT_DFF pass (perform DFF optimizations).

37.24. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \FIFO_Model..

37.25. Executing OPT_EXPR pass (perform const folding).
Optimizing module FIFO_Model.

37.26. Finished OPT passes. (There is nothing left to do.)

38. Executing TECHMAP pass (map to technology primitives).

38.1. Executing Verilog-2005 frontend: /nix/store/sx2v0i73mn1ih2z1nk61pm9n5gjgpidy-yosys/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nix/store/sx2v0i73mn1ih2z1nk61pm9n5gjgpidy-yosys/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

38.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $dffe.
Using template $paramod$175e67c02b86e96b1288b9dc100122520d7240d8\_90_alu for cells of type $alu.
Using template $paramod$78e969f2586efcf3a5b0b0440bcca0db83d5cca2\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $logic_and.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $logic_or.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $adffe.
Using extmapper simplemap for cells of type $mux.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000010 for cells of type $lcu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000011 for cells of type $lcu.
Using extmapper simplemap for cells of type $or.
No more expansions possible.
<suppressed ~443 debug messages>

39. Executing OPT pass (performing simple optimizations).

39.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module FIFO_Model.
<suppressed ~56 debug messages>

39.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\FIFO_Model'.
<suppressed ~48 debug messages>
Removed a total of 16 cells.

39.3. Executing OPT_DFF pass (perform DFF optimizations).

39.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \FIFO_Model..
Removed 6 unused cells and 118 unused wires.
<suppressed ~7 debug messages>

39.5. Finished fast OPT passes.

40. Executing ABC pass (technology mapping using ABC).

40.1. Extracting gate netlist of module `\FIFO_Model' to `<abc-temp-dir>/input.blif'..
Extracted 183 gates and 328 wires to a netlist network with 143 inputs and 55 outputs.

40.1.1. Executing ABC.
Running ABC command: "/nix/store/wq2q0njg3sx8wvj2akz7x1qxwyrv9xlr-yosys-abc/bin/abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

40.1.2. Re-integrating ABC results.
ABC RESULTS:               NOR cells:        5
ABC RESULTS:               AND cells:        2
ABC RESULTS:              XNOR cells:        2
ABC RESULTS:             ORNOT cells:        7
ABC RESULTS:               XOR cells:        3
ABC RESULTS:               NOT cells:        4
ABC RESULTS:               MUX cells:       98
ABC RESULTS:              NAND cells:        7
ABC RESULTS:                OR cells:       19
ABC RESULTS:            ANDNOT cells:       18
ABC RESULTS:        internal signals:      130
ABC RESULTS:           input signals:      143
ABC RESULTS:          output signals:       55
Removing temp directory.

41. Executing OPT pass (performing simple optimizations).

41.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module FIFO_Model.
<suppressed ~34 debug messages>

41.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\FIFO_Model'.
Removed a total of 0 cells.

41.3. Executing OPT_DFF pass (perform DFF optimizations).

41.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \FIFO_Model..
Removed 1 unused cells and 257 unused wires.
<suppressed ~2 debug messages>

41.5. Finished fast OPT passes.

42. Executing HIERARCHY pass (managing design hierarchy).

42.1. Analyzing design hierarchy..
Top module:  \FIFO_Model

42.2. Analyzing design hierarchy..
Top module:  \FIFO_Model
Removed 0 unused modules.

43. Printing statistics.

=== FIFO_Model ===

   Number of wires:                157
   Number of wire bits:            477
   Number of public wires:          29
   Number of public wire bits:     345
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                304
     $_ANDNOT_                      18
     $_AND_                          2
     $_DFFE_PN0P_                    8
     $_DFFE_PN1P_                    4
     $_DFFE_PP_                    128
     $_MUX_                         98
     $_NAND_                         7
     $_NOR_                          5
     $_NOT_                          3
     $_ORNOT_                        7
     $_OR_                          19
     $_XNOR_                         2
     $_XOR_                          3

44. Executing CHECK pass (checking for obvious problems).
Checking module FIFO_Model...
Found and reported 0 problems.

45. Generating Graphviz representation of design.
Writing dot description to `/openlane/designs/FIFO_Model/runs/FinalFlow/tmp/synthesis/post_techmap.dot'.
Dumping module FIFO_Model to page 1.

46. Executing SHARE pass (SAT-based resource sharing).

47. Executing OPT pass (performing simple optimizations).

47.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module FIFO_Model.

47.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\FIFO_Model'.
Removed a total of 0 cells.

47.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \FIFO_Model..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

47.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \FIFO_Model.
Performed a total of 0 changes.

47.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\FIFO_Model'.
Removed a total of 0 cells.

47.6. Executing OPT_DFF pass (perform DFF optimizations).

47.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \FIFO_Model..

47.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module FIFO_Model.

47.9. Finished OPT passes. (There is nothing left to do.)

48. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \FIFO_Model..
Removed 0 unused cells and 10 unused wires.
<suppressed ~10 debug messages>

49. Printing statistics.

=== FIFO_Model ===

   Number of wires:                147
   Number of wire bits:            341
   Number of public wires:          19
   Number of public wire bits:     209
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                304
     $_ANDNOT_                      18
     $_AND_                          2
     $_DFFE_PN0P_                    8
     $_DFFE_PN1P_                    4
     $_DFFE_PP_                    128
     $_MUX_                         98
     $_NAND_                         7
     $_NOR_                          5
     $_NOT_                          3
     $_ORNOT_                        7
     $_OR_                          19
     $_XNOR_                         2
     $_XOR_                          3

mapping tbuf

50. Executing TECHMAP pass (map to technology primitives).

50.1. Executing Verilog-2005 frontend: /home/manan/.volare/sky130A/libs.tech/openlane/sky130_fd_sc_hd/tribuff_map.v
Parsing Verilog input from `/home/manan/.volare/sky130A/libs.tech/openlane/sky130_fd_sc_hd/tribuff_map.v' to AST representation.
Generating RTLIL representation for module `\$_TBUF_'.
Successfully finished Verilog frontend.

50.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~3 debug messages>

51. Executing SIMPLEMAP pass (map simple cells to gate primitives).

52. Executing TECHMAP pass (map to technology primitives).

52.1. Executing Verilog-2005 frontend: /home/manan/.volare/sky130A/libs.tech/openlane/sky130_fd_sc_hd/latch_map.v
Parsing Verilog input from `/home/manan/.volare/sky130A/libs.tech/openlane/sky130_fd_sc_hd/latch_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Successfully finished Verilog frontend.

52.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

53. Executing SIMPLEMAP pass (map simple cells to gate primitives).

54. Executing DFFLIBMAP pass (mapping DFF cells to sequential cells from liberty file).
  cell sky130_fd_sc_hd__dfxtp_2 (noninv, pins=3, area=21.27) is a direct match for cell type $_DFF_P_.
  cell sky130_fd_sc_hd__dfrtp_2 (noninv, pins=4, area=26.28) is a direct match for cell type $_DFF_PN0_.
  cell sky130_fd_sc_hd__dfstp_2 (noninv, pins=4, area=26.28) is a direct match for cell type $_DFF_PN1_.
  cell sky130_fd_sc_hd__dfbbn_2 (noninv, pins=6, area=35.03) is a direct match for cell type $_DFFSR_NNN_.
  final dff cell mappings:
    unmapped dff cell: $_DFF_N_
    \sky130_fd_sc_hd__dfxtp_2 _DFF_P_ (.CLK( C), .D( D), .Q( Q));
    unmapped dff cell: $_DFF_NN0_
    unmapped dff cell: $_DFF_NN1_
    unmapped dff cell: $_DFF_NP0_
    unmapped dff cell: $_DFF_NP1_
    \sky130_fd_sc_hd__dfrtp_2 _DFF_PN0_ (.CLK( C), .D( D), .Q( Q), .RESET_B( R));
    \sky130_fd_sc_hd__dfstp_2 _DFF_PN1_ (.CLK( C), .D( D), .Q( Q), .SET_B( R));
    unmapped dff cell: $_DFF_PP0_
    unmapped dff cell: $_DFF_PP1_
    \sky130_fd_sc_hd__dfbbn_2 _DFFSR_NNN_ (.CLK_N( C), .D( D), .Q( Q), .Q_N(~Q), .RESET_B( R), .SET_B( S));
    unmapped dff cell: $_DFFSR_NNP_
    unmapped dff cell: $_DFFSR_NPN_
    unmapped dff cell: $_DFFSR_NPP_
    unmapped dff cell: $_DFFSR_PNN_
    unmapped dff cell: $_DFFSR_PNP_
    unmapped dff cell: $_DFFSR_PPN_
    unmapped dff cell: $_DFFSR_PPP_

54.1. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).
Mapping DFF cells in module `\FIFO_Model':
  mapped 8 $_DFF_PN0_ cells to \sky130_fd_sc_hd__dfrtp_2 cells.
  mapped 4 $_DFF_PN1_ cells to \sky130_fd_sc_hd__dfstp_2 cells.
  mapped 128 $_DFF_P_ cells to \sky130_fd_sc_hd__dfxtp_2 cells.

55. Printing statistics.

=== FIFO_Model ===

   Number of wires:                287
   Number of wire bits:            481
   Number of public wires:          19
   Number of public wire bits:     209
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                444
     $_ANDNOT_                      18
     $_AND_                          2
     $_MUX_                        238
     $_NAND_                         7
     $_NOR_                          5
     $_NOT_                          3
     $_ORNOT_                        7
     $_OR_                          19
     $_XNOR_                         2
     $_XOR_                          3
     sky130_fd_sc_hd__dfrtp_2        8
     sky130_fd_sc_hd__dfstp_2        4
     sky130_fd_sc_hd__dfxtp_2      128

[INFO]: USING STRATEGY DELAY 4

56. Executing ABC pass (technology mapping using ABC).

56.1. Extracting gate netlist of module `\FIFO_Model' to `/tmp/yosys-abc-se6MQ3/input.blif'..
Extracted 304 gates and 479 wires to a netlist network with 175 inputs and 172 outputs.

56.1.1. Executing ABC.
Running ABC command: "/nix/store/wq2q0njg3sx8wvj2akz7x1qxwyrv9xlr-yosys-abc/bin/abc" -s -f /tmp/yosys-abc-se6MQ3/abc.script 2>&1
ABC: ABC command line: "source /tmp/yosys-abc-se6MQ3/abc.script".
ABC: 
ABC: + read_blif /tmp/yosys-abc-se6MQ3/input.blif 
ABC: + read_lib -w /openlane/designs/FIFO_Model/runs/FinalFlow/tmp/synthesis/trimmed.lib 
ABC: Parsing finished successfully.  Parsing time =     0.03 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfsbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtp_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_8".
ABC: Library "sky130A_merged" from "/openlane/designs/FIFO_Model/runs/FinalFlow/tmp/synthesis/trimmed.lib" has 175 cells (17 skipped: 14 seq; 3 tri-state; 0 no func; 0 dont_use).  Time =     0.04 sec
ABC: Memory =    9.54 MB. Time =     0.04 sec
ABC: Warning: Detected 2 multi-output gates (for example, "sky130_fd_sc_hd__fa_1").
ABC: + read_constr -v /openlane/designs/FIFO_Model/runs/FinalFlow/tmp/synthesis/synthesis.sdc 
ABC: Setting driving cell to be "sky130_fd_sc_hd__inv_2".
ABC: Setting output load to be 33.442001.
ABC: + read_constr /openlane/designs/FIFO_Model/runs/FinalFlow/tmp/synthesis/synthesis.sdc 
ABC: + &get -n 
ABC: + &st 
ABC: + &dch 
ABC: + &nf 
ABC: + &put 
ABC: + &get -n 
ABC: + &st 
ABC: + &syn2 
ABC: + &if -g -K 6 
ABC: + &synch2 
ABC: + &nf 
ABC: + &put 
ABC: + &get -n 
ABC: + &st 
ABC: + &syn2 
ABC: + &if -g -K 6 
ABC: + &synch2 
ABC: + &nf 
ABC: + &put 
ABC: + &get -n 
ABC: + &st 
ABC: + &syn2 
ABC: + &if -g -K 6 
ABC: + &synch2 
ABC: + &nf 
ABC: + &put 
ABC: + &get -n 
ABC: + &st 
ABC: + &syn2 
ABC: + &if -g -K 6 
ABC: + &synch2 
ABC: + &nf 
ABC: + &put 
ABC: + &get -n 
ABC: + &st 
ABC: + &syn2 
ABC: + &if -g -K 6 
ABC: + &synch2 
ABC: + &nf 
ABC: + &put 
ABC: + buffer -c -N 6 
ABC: + topo 
ABC: + stime -c 
ABC: WireLoad = "Small"  Gates =    421 ( 50.8 %)   Cap = 14.3 ff ( 28.7 %)   Area =     5452.73 ( 50.4 %)   Delay =  1630.76 ps  (  6.9 %)               
ABC: + upsize -c 
ABC: + dnsize -c 
ABC: + 
ABC: + stime -p 
ABC: WireLoad = "none"  Gates =    421 ( 50.8 %)   Cap = 13.3 ff ( 12.1 %)   Area =     3558.41 ( 61.8 %)   Delay =  1292.18 ps  ( 23.5 %)               
ABC: Path  0 --       5 : 0    5 pi                       A =   0.00  Df =  46.2  -26.0 ps  S =  69.8 ps  Cin =  0.0 ff  Cout =  13.8 ff  Cmax =   0.0 ff  G =    0  
ABC: Path  1 --     718 : 1    6 sky130_fd_sc_hd__buf_6   A =  11.26  Df = 146.6  -17.7 ps  S =  36.1 ps  Cin =  4.6 ff  Cout =  10.9 ff  Cmax = 785.5 ff  G =  226  
ABC: Path  2 --     732 : 4    1 sky130_fd_sc_hd__or4b_2  A =  10.01  Df = 774.5 -457.1 ps  S =  96.0 ps  Cin =  1.5 ff  Cout =   2.4 ff  Cmax = 265.5 ff  G =  159  
ABC: Path  3 --     733 : 4    1 sky130_fd_sc_hd__o211a_2 A =  10.01  Df = 931.4 -444.7 ps  S =  56.3 ps  Cin =  2.4 ff  Cout =   5.2 ff  Cmax = 268.3 ff  G =  205  
ABC: Path  4 --     734 : 4    1 sky130_fd_sc_hd__a211o_4 A =  17.52  Df =1292.2 -431.0 ps  S = 107.4 ps  Cin =  4.6 ff  Cout =  33.4 ff  Cmax = 559.4 ff  G =  725  
ABC: Start-point = pi4 (\FInN).  End-point = po164 ($auto$rtlil.cc:2684:MuxGate$1267).
ABC: + print_stats -m 
ABC: netlist                       : i/o =  175/  172  lat =    0  nd =   421  edge =    926  area =3557.46  delay = 6.00  lev = 6
ABC: + write_blif /tmp/yosys-abc-se6MQ3/output.blif 

56.1.2. Re-integrating ABC results.
ABC RESULTS:   sky130_fd_sc_hd__mux4_2 cells:       32
ABC RESULTS:   sky130_fd_sc_hd__or3b_4 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__nand2b_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__bufinv_8 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__or2_4 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__nand2_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__or3b_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__or4b_4 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__or3_4 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__buf_2 cells:       93
ABC RESULTS:   sky130_fd_sc_hd__or4b_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o211a_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__a211o_4 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__inv_2 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__nand4bb_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__a21oi_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__o21ai_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__a31o_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__and2b_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__and2_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__and4bb_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__and4b_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__mux2_2 cells:      132
ABC RESULTS:   sky130_fd_sc_hd__and3b_2 cells:        5
ABC RESULTS:   sky130_fd_sc_hd__or4_4 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__buf_6 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__or2b_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__or2_2 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__and3_2 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__buf_1 cells:      115
ABC RESULTS:   sky130_fd_sc_hd__xor2_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__nor2_2 cells:        5
ABC RESULTS:        internal signals:      132
ABC RESULTS:           input signals:      175
ABC RESULTS:          output signals:      172
Removing temp directory.

57. Executing SETUNDEF pass (replace undef values with defined constants).

58. Executing HILOMAP pass (mapping to constant drivers).

59. Executing SPLITNETS pass (splitting up multi-bit signals).

60. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \FIFO_Model..
Removed 0 unused cells and 479 unused wires.
<suppressed ~1 debug messages>

61. Executing INSBUF pass (insert buffer cells for connected wires).

62. Executing CHECK pass (checking for obvious problems).
Checking module FIFO_Model...
Found and reported 0 problems.

63. Printing statistics.

=== FIFO_Model ===

   Number of wires:                536
   Number of wire bits:            598
   Number of public wires:         147
   Number of public wire bits:     209
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                561
     sky130_fd_sc_hd__a211o_4        1
     sky130_fd_sc_hd__a21oi_2        2
     sky130_fd_sc_hd__a31o_2         2
     sky130_fd_sc_hd__and2_2         2
     sky130_fd_sc_hd__and2b_2        1
     sky130_fd_sc_hd__and3_2         3
     sky130_fd_sc_hd__and3b_2        5
     sky130_fd_sc_hd__and4b_2        1
     sky130_fd_sc_hd__and4bb_2       1
     sky130_fd_sc_hd__buf_1        115
     sky130_fd_sc_hd__buf_2         93
     sky130_fd_sc_hd__buf_6          2
     sky130_fd_sc_hd__bufinv_8       1
     sky130_fd_sc_hd__dfrtp_2        8
     sky130_fd_sc_hd__dfstp_2        4
     sky130_fd_sc_hd__dfxtp_2      128
     sky130_fd_sc_hd__inv_2          3
     sky130_fd_sc_hd__mux2_2       132
     sky130_fd_sc_hd__mux4_2        32
     sky130_fd_sc_hd__nand2_2        1
     sky130_fd_sc_hd__nand2b_2       1
     sky130_fd_sc_hd__nand4bb_2      1
     sky130_fd_sc_hd__nor2_2         5
     sky130_fd_sc_hd__o211a_2        2
     sky130_fd_sc_hd__o21ai_2        2
     sky130_fd_sc_hd__or2_2          3
     sky130_fd_sc_hd__or2_4          1
     sky130_fd_sc_hd__or2b_2         1
     sky130_fd_sc_hd__or3_4          2
     sky130_fd_sc_hd__or3b_2         1
     sky130_fd_sc_hd__or3b_4         1
     sky130_fd_sc_hd__or4_4          1
     sky130_fd_sc_hd__or4b_2         1
     sky130_fd_sc_hd__or4b_4         1
     sky130_fd_sc_hd__xor2_2         1

   Chip area for module '\FIFO_Model': 6596.326400

64. Executing Verilog backend.
Dumping module `\FIFO_Model'.

65. Executing JSON backend.

End of script. Logfile hash: eedcf1891c, CPU: user 0.26s system 0.09s, MEM: 42.88 MB peak
Yosys 0.38 (git sha1 543faed9c8c, clang++ 17.0.6 -fPIC -Os)
Time spent: 40% 2x abc (0 sec), 15% 2x read_liberty (0 sec), ...
